import streamlit as st
import pandas as pd
import plotly.express as px
import numpy as np

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
df = pd.read_csv("merged_data_with_fields.csv")

# ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
df['Total price'] = df['Total price'].replace('[^\\d.]', '', regex=True).astype(float)
df['Booked At'] = pd.to_datetime(df['Booked At'])
df['Check - In'] = pd.to_datetime(df['Check - In'])
df['Month'] = df['Check - In'].dt.to_period('M')
df = df[df['Booking status'] == 'Booked']
df['Room Type'] = df['Room_room']
df['Month_str'] = df['Check - In'].dt.strftime('%Y-%m')

# ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°
revenue_by_price = df.groupby('Total price')['Total price'].agg(['count', 'sum']).reset_index()
revenue_by_price.columns = ['Price', 'Bookings', 'Total Revenue']
revenue_by_price_sorted = revenue_by_price.sort_values('Price')

# ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (median) ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢)
recommended_prices = df.groupby(['Room Type', 'Month_str'])['Total price'].median().reset_index()
recommended_prices.columns = ['Room Type', 'Month', 'Recommended Price']
current_prices = df.groupby(['Room Type', 'Month_str'])['Total price'].mean().reset_index()
current_prices.columns = ['Room Type', 'Month', 'Current Price']
price_comparison = pd.merge(current_prices, recommended_prices, on=['Room Type', 'Month'])

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô Streamlit
st.title("üìä Revenue Optimization Dashboard")

st.header("üìà ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°")
fig1 = px.scatter(revenue_by_price_sorted, x="Price", y="Total Revenue", size="Bookings",
                  labels={"Price": "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å", "Total Revenue": "‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°"},
                  title="‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ")
st.plotly_chart(fig1)

st.header("üìä ‡∏ä‡πà‡∏ß‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á")
fig2 = px.box(df, x="Month_str", y="Total price", color="Room Type", points="all",
              labels={"Month_str": "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "Total price": "‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á"},
              title="‡∏ä‡πà‡∏ß‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÅ‡∏¢‡∏Å‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á")
st.plotly_chart(fig2)

st.header("üìâ ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥")
room_types = df['Room Type'].unique()
selected_room = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á", room_types)

filtered_comparison = price_comparison[price_comparison["Room Type"] == selected_room]
fig3 = px.bar(filtered_comparison, x="Month", y=["Current Price", "Recommended Price"],
              barmode="group",
              color_discrete_sequence=["#636EFA", "#EF553B"],
              labels={"value": "‡∏£‡∏≤‡∏Ñ‡∏≤", "Month": "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", "variable": "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó"},
              title=f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô vs ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: {selected_room}")
st.plotly_chart(fig3)

st.header("üß™ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå")
month_options = df[df['Room Type'] == selected_room]['Month_str'].unique()
selected_month = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", sorted(month_options))

recommended = recommended_prices[
    (recommended_prices['Room Type'] == selected_room) & 
    (recommended_prices['Month'] == selected_month)
]['Recommended Price'].values[0]

input_price = st.slider("‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤‡∏´‡πâ‡∏≠‡∏á", 500.0, 5000.0, float(recommended), step=10.0)

# ‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥‡∏ê‡∏≤‡∏ô: ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ = ‡∏£‡∏≤‡∏Ñ‡∏≤ * ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏•‡∏î‡∏•‡∏á‡∏ï‡∏≤‡∏° gdp elasticity
elasticity = -1.2  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤
base_bookings = df[
    (df['Room Type'] == selected_room) & 
    (df['Month_str'] == selected_month)
].shape[0]

price_ratio = input_price / recommended
simulated_bookings = base_bookings * (price_ratio ** elasticity)
simulated_revenue = input_price * simulated_bookings

st.markdown(f"""
### üîç ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á
- **‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå:** {simulated_bookings:.0f} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
- **‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå:** THB {simulated_revenue:,.2f}
""")
